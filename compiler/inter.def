{ inter.def - intermediate file from analysis to traverse }
type
  {<<<}
  { statement operators emitted by analys, read by travrs }
  stmttype = ( begblk, endblk, begwhile, endwhile, begrpt, endrpt, begfor,
               forup, fordn, endfor, begif, endelse, begelse, endthen, gotolab,
               deflab, begwith, endwith, begcase, caselab, casedef, endcaseelt,
               caselabrange, endcase, begcfor, endcfor, begreturn, begloop,
               endloop, begexit, blksize, hiddenstmt, begswitch, endswitch,
               inits, loopbreak, loopcont, switchbreak, syscall, simple,
               begdata, endall
             );
  {>>>}
  {<<<}
  { expression operators emitted by analys, read by travrs }
  { DO NOT ALPHABETIZE OR OTHERWISE SCREW AROUND WITH THE ORDERING }
  {operators before intop are linked by travrs sequentially and are never CSEs}
  operator = ( endexpr, newvarop, newunsvarop, globalop, localop, lit,
              defforlitindexop, defforindexop, forindexop,
              defunsforlitindexop, defunsforindexop, forupchkop, fordnchkop,
              forerrchkop, moveop, cmoveop, movelit, lssop, leqop, neqop,
              eqop, gtrop, geqop, lsslit, leqlit, eqlit, neqlit, gtrlit,
              geqlit, withop, setfileop, setfileaddrop, setinput, newset,
              bldset, setelt, setpair, bldnil, bldfmt, inop, addrop, pushaddr,
              pushstraddr, pushvalue, pushcvalue, pushfinal, pushlitvalue,
              pushret, pushfptr, retop, call, jumpvfuncop,
              unscall, callparam, unscallparam, copystackop, reserve,
              pushproc, rd, wr, switchstack, structop, closerangeop,
              dummyargop, filebufindrop, intop, ptrop, realop, doubleop,
              varop, unsvarop, definelazyop, ownop, segop, extop, levop,
              tempop, originop, float1, float, float_double, real_to_dbl,
              dbl_to_real, plusop, dummyarg2op, minusop, mulop, divop,
              stddivop, remop, quoop, kwoop, modop, stdmodop, negop, slashop,
              setbinfileop, shiftlop, incop, decop, indrop, indxop, aindxop,
              pindxop, paindxop, chrstrop, chrstrop1, arraystrop, arraystrop1,
              sysfn, andop, orop, notop, loopholeop, indxchkop, ptrchkop,
              congruchkop, cindxchkop, rangechkop, openarrayop, fptrop,
              returnop, uretop, shiftrop, addeqop, andeqop, begscope,
              castintop, castptrop, castfptrop, castrealop, commaop, compop,
              daddop, daddrop, dendop, dfaddrop, dfieldop, dfillop, dintop,
              diveqop, drealop, dstartop, dstoreop, dstructop, dsubop,
              endscope, groupop, modeqop, muleqop, oreqop, preincop,
              postincop, questop, shiftleqop, shiftreqop, subeqop, varkind,
              xoreqop, xorop, vindxop, parmop, clearnewop, saveop, restop,
              deleteop
            );
  {>>>}
  {<<<}
  { define the different kinds of records emitted by analys }
  intcodetype = (stmt, op, literal, form);
  {>>>}

  interRecordType = packed record
    case intcodetype of
      stmt:    (s: stmttype);
      op:      (o: operator);
      literal: (b: hostfilebyte);
      form:    (f: types)
    end;

  interFileType = file of packed record
                    block:  packed array [0..diskbufsize] of interRecordType;
                    end;

  interSharedType = record
                      interFile: interFileType;
                      end;
  interSharedPtrType = ^interSharedType;

{ utils }
procedure comparereal (left, right: real; var result: boolean; op: operator); external;
procedure uscompareint (left, right: unsignedint; var result: boolean; op: operator); external;
procedure compareint (left, right: integer; var result: boolean; op: operator); external;

{ interface }
function getInterSharedPtr : interSharedPtrType; external;
